AWSTemplateFormatVersion: '2010-09-09'
Description: window-post-api-lambdas

Transform:
- AWS::Serverless-2016-10-31

Resources:
  ###
  ### Roles
  ###

  # A role for the lambda
  LambdasExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole

  LambdasExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WindowPostApiLambasExecutionPolicy
      PolicyDocument:
        Statement:
          # S3
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource:
              # input bucket
              #- !Sub "${PostInputBucket.Arn}/*"
              #- arn:aws:s3:::window-post-api-lambdas-postinputbucket-test/*
              #- !Sub "${ProcessedImagesBucket.Arn}/*"
              - !Sub "arn:aws:s3:::${AWS::StackName}-*"
              # doing above to break circular dependency, though it sucks

          # DynamoDB
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:Query
              - dynamodb:Scan
            Resource: !GetAtt PostStatusTable.Arn
      Roles:
      - !Ref LambdasExecutionRole
      Groups:
      - !Ref LambdasExecutionGroup

  ###
  ### IAM groups
  ###

  # A group for users whom can assume the role
  LambdasExecutionGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: window-post-api-lambdas-execution

  ###
  ### Lambdas
  ###
  CreatePost:
    Type: AWS::Serverless::Function
    DependsOn: LambdasExecutionRole
    Properties:
      Handler: codes.rik.window.post.handler.api.CreatePostHandler
      Role: !GetAtt LambdasExecutionRole.Arn
      CodeUri: ../build/libs/post-api-lambdas-0.1-all.jar
      Timeout: 15
      MemorySize: 192
      Runtime: java8
      Environment:
        Variables:
          WINDOW_PostInputBucketArn: !GetAtt PostInputBucket.Arn
          WINDOW_PostStatusTableArn: !GetAtt PostStatusTable.Arn
      Events:
        CreateEvent:
          Type: Api
          Properties:
            Path: /create
            Method: post

  ProcessUpload:
    Type: AWS::Serverless::Function
    DependsOn: LambdasExecutionRole
    Properties:
      Handler: codes.rik.window.post.handler.s3.ProcessUploadHandler
      Role: !GetAtt LambdasExecutionRole.Arn
      CodeUri: ../build/libs/post-api-lambdas-0.1-all.jar
      Timeout: 15
      MemorySize: 192
      Runtime: java8
      Environment:
        Variables:
          WINDOW_ProcessedImagesBucketArn: !GetAtt ProcessedImagesBucket.Arn
          WINDOW_PostStatusTableArn: !GetAtt PostStatusTable.Arn
      Events:
        S3PutEvent:
          Type: S3
          Properties:
            Bucket: !Ref PostInputBucket
            Events: s3:ObjectCreated:*

  ###
  ### S3
  ###

  # input posts
  PostInputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  # processed posts
  ProcessedImagesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  ###
  ### DDB
  ###
  PostStatusTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: UserId
          AttributeType: S
        -
          AttributeName: PostId
          AttributeType: S
      KeySchema:
        -
          AttributeName: UserId
          KeyType: HASH
        -
          AttributeName: PostId
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ExpirationTime
        Enabled: true
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

